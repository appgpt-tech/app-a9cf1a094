//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { UsersEntity } from './db/Users.entity';
import { EmployeesEntity } from './db/Employees.entity';
import { EvaluationsEntity } from './db/Evaluations.entity';
import { PayrollEntity } from './db/Payroll.entity';
import { LeaveRequestsEntity } from './db/LeaveRequests.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      UsersEntity,
      EmployeesEntity,
      EvaluationsEntity,
      PayrollEntity,
      LeaveRequestsEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Users: [
        {
          userId: 1,
          name: 'name 1',
          email: 'email 1',
          password: 'password 1',
          role: 'role 1',
          id: 86,
        },
        {
          userId: 2,
          name: 'name 2',
          email: 'email 2',
          password: 'password 2',
          role: 'role 2',
          id: 90,
        },
        {
          userId: 3,
          name: 'name 3',
          email: 'email 3',
          password: 'password 3',
          role: 'role 3',
          id: 6,
        },
        {
          userId: 4,
          name: 'name 4',
          email: 'email 4',
          password: 'password 4',
          role: 'role 4',
          id: 84,
        },
        {
          userId: 5,
          name: 'name 5',
          email: 'email 5',
          password: 'password 5',
          role: 'role 5',
          id: 34,
        },
      ],
      Employees: [
        {
          employeeId: 1,
          firstName: 'firstName 1',
          lastName: 'lastName 1',
          middleName: 'middleName 1',
          dateOfBirth: '2025-03-13T11:58:04.891Z',
          gender: 'gender 1',
          nationality: 'nationality 1',
          maritalStatus: 'maritalStatus 1',
          contactInformation: 'contactInformation 1',
          address: 'address 1',
          department: 'department 1',
          position: 'position 1',
          manager: 'manager 1',
          employmentType: 'employmentType 1',
          startDate: '2025-04-04T11:53:02.825Z',
          endDate: '2024-09-07T03:34:06.414Z',
          salaryInformation: 0.89,
          profilePicture: 'profilePicture 1',
          id: 59,
        },
        {
          employeeId: 2,
          firstName: 'firstName 2',
          lastName: 'lastName 2',
          middleName: 'middleName 2',
          dateOfBirth: '2024-12-03T15:47:39.618Z',
          gender: 'gender 2',
          nationality: 'nationality 2',
          maritalStatus: 'maritalStatus 2',
          contactInformation: 'contactInformation 2',
          address: 'address 2',
          department: 'department 2',
          position: 'position 2',
          manager: 'manager 2',
          employmentType: 'employmentType 2',
          startDate: '2023-10-11T18:11:22.566Z',
          endDate: '2024-08-08T12:27:28.367Z',
          salaryInformation: 0.33,
          profilePicture: 'profilePicture 2',
          id: 73,
        },
        {
          employeeId: 3,
          firstName: 'firstName 3',
          lastName: 'lastName 3',
          middleName: 'middleName 3',
          dateOfBirth: '2023-04-21T03:47:06.017Z',
          gender: 'gender 3',
          nationality: 'nationality 3',
          maritalStatus: 'maritalStatus 3',
          contactInformation: 'contactInformation 3',
          address: 'address 3',
          department: 'department 3',
          position: 'position 3',
          manager: 'manager 3',
          employmentType: 'employmentType 3',
          startDate: '2023-10-21T04:05:27.011Z',
          endDate: '2025-03-19T17:48:17.909Z',
          salaryInformation: 0.49,
          profilePicture: 'profilePicture 3',
          id: 97,
        },
        {
          employeeId: 4,
          firstName: 'firstName 4',
          lastName: 'lastName 4',
          middleName: 'middleName 4',
          dateOfBirth: '2023-05-09T23:28:59.704Z',
          gender: 'gender 4',
          nationality: 'nationality 4',
          maritalStatus: 'maritalStatus 4',
          contactInformation: 'contactInformation 4',
          address: 'address 4',
          department: 'department 4',
          position: 'position 4',
          manager: 'manager 4',
          employmentType: 'employmentType 4',
          startDate: '2024-10-06T23:16:45.825Z',
          endDate: '2023-11-03T10:19:20.432Z',
          salaryInformation: 0.61,
          profilePicture: 'profilePicture 4',
          id: 38,
        },
        {
          employeeId: 5,
          firstName: 'firstName 5',
          lastName: 'lastName 5',
          middleName: 'middleName 5',
          dateOfBirth: '2024-01-09T04:42:30.783Z',
          gender: 'gender 5',
          nationality: 'nationality 5',
          maritalStatus: 'maritalStatus 5',
          contactInformation: 'contactInformation 5',
          address: 'address 5',
          department: 'department 5',
          position: 'position 5',
          manager: 'manager 5',
          employmentType: 'employmentType 5',
          startDate: '2024-09-13T09:32:41.148Z',
          endDate: '2023-05-15T19:55:03.036Z',
          salaryInformation: 0.48,
          profilePicture: 'profilePicture 5',
          id: 87,
        },
      ],
      Evaluations: [
        {
          reviewId: 1,
          employeeId: 1,
          periodStart: '2024-12-21T23:22:21.805Z',
          periodEnd: '2023-04-27T05:02:39.027Z',
          goalsObjectives: 'goalsObjectives 1',
          achievements: 'achievements 1',
          improvementAreas: 'improvementAreas 1',
          feedbackFromSupervisor: 'feedbackFromSupervisor 1',
          overallRating: 1,
          recommendations: 'recommendations 1',
          id: 63,
        },
        {
          reviewId: 2,
          employeeId: 2,
          periodStart: '2024-08-23T10:16:55.901Z',
          periodEnd: '2024-08-05T15:51:14.421Z',
          goalsObjectives: 'goalsObjectives 2',
          achievements: 'achievements 2',
          improvementAreas: 'improvementAreas 2',
          feedbackFromSupervisor: 'feedbackFromSupervisor 2',
          overallRating: 2,
          recommendations: 'recommendations 2',
          id: 24,
        },
        {
          reviewId: 3,
          employeeId: 3,
          periodStart: '2023-05-14T18:27:05.388Z',
          periodEnd: '2024-09-13T01:49:23.411Z',
          goalsObjectives: 'goalsObjectives 3',
          achievements: 'achievements 3',
          improvementAreas: 'improvementAreas 3',
          feedbackFromSupervisor: 'feedbackFromSupervisor 3',
          overallRating: 3,
          recommendations: 'recommendations 3',
          id: 71,
        },
        {
          reviewId: 4,
          employeeId: 4,
          periodStart: '2023-10-28T16:19:45.719Z',
          periodEnd: '2024-07-01T15:55:17.188Z',
          goalsObjectives: 'goalsObjectives 4',
          achievements: 'achievements 4',
          improvementAreas: 'improvementAreas 4',
          feedbackFromSupervisor: 'feedbackFromSupervisor 4',
          overallRating: 4,
          recommendations: 'recommendations 4',
          id: 80,
        },
        {
          reviewId: 5,
          employeeId: 5,
          periodStart: '2025-02-25T11:31:35.781Z',
          periodEnd: '2024-04-24T13:42:39.899Z',
          goalsObjectives: 'goalsObjectives 5',
          achievements: 'achievements 5',
          improvementAreas: 'improvementAreas 5',
          feedbackFromSupervisor: 'feedbackFromSupervisor 5',
          overallRating: 5,
          recommendations: 'recommendations 5',
          id: 25,
        },
      ],
      Payroll: [
        {
          payrollId: 1,
          employeeId: 1,
          periodStartDate: '2024-02-20T20:06:23.411Z',
          periodEndDate: '2023-08-05T05:26:13.490Z',
          grossSalary: 0.79,
          deductions: 0.57,
          netSalary: 0.36,
          payDate: '2024-11-03T02:06:30.339Z',
          overtimeHours: 1,
          overtimePay: 0.99,
          id: 21,
        },
        {
          payrollId: 2,
          employeeId: 2,
          periodStartDate: '2024-05-09T20:49:08.902Z',
          periodEndDate: '2024-03-18T19:16:49.154Z',
          grossSalary: 0.62,
          deductions: 0.52,
          netSalary: 0.96,
          payDate: '2025-04-19T03:06:41.904Z',
          overtimeHours: 2,
          overtimePay: 0.39,
          id: 35,
        },
        {
          payrollId: 3,
          employeeId: 3,
          periodStartDate: '2025-04-03T00:51:57.473Z',
          periodEndDate: '2025-02-22T01:08:19.726Z',
          grossSalary: 0.38,
          deductions: 0.26,
          netSalary: 0.66,
          payDate: '2025-02-16T03:12:25.951Z',
          overtimeHours: 3,
          overtimePay: 0.32,
          id: 8,
        },
        {
          payrollId: 4,
          employeeId: 4,
          periodStartDate: '2024-11-05T05:27:33.840Z',
          periodEndDate: '2023-05-01T05:45:20.146Z',
          grossSalary: 0.22,
          deductions: 0.12,
          netSalary: 0.87,
          payDate: '2023-10-08T05:46:27.668Z',
          overtimeHours: 4,
          overtimePay: 0.77,
          id: 93,
        },
        {
          payrollId: 5,
          employeeId: 5,
          periodStartDate: '2023-10-03T14:12:05.813Z',
          periodEndDate: '2024-10-30T09:53:21.780Z',
          grossSalary: 0.58,
          deductions: 0.1,
          netSalary: 0.92,
          payDate: '2023-08-09T05:03:39.636Z',
          overtimeHours: 5,
          overtimePay: 0.96,
          id: 83,
        },
      ],
      LeaveRequests: [
        {
          requestId: 1,
          employeeId: 1,
          typeOfLeave: 'typeOfLeave 1',
          startDate: '2023-08-27T04:50:16.300Z',
          endDate: '2024-01-21T22:44:19.721Z',
          reason: 'reason 1',
          approvalStatus: 'approvalStatus 1',
          approverUserId: 1,
          id: 69,
        },
        {
          requestId: 2,
          employeeId: 2,
          typeOfLeave: 'typeOfLeave 2',
          startDate: '2023-10-03T14:02:09.187Z',
          endDate: '2025-03-26T09:20:16.061Z',
          reason: 'reason 2',
          approvalStatus: 'approvalStatus 2',
          approverUserId: 2,
          id: 47,
        },
        {
          requestId: 3,
          employeeId: 3,
          typeOfLeave: 'typeOfLeave 3',
          startDate: '2024-08-03T14:18:17.121Z',
          endDate: '2025-01-17T06:12:23.597Z',
          reason: 'reason 3',
          approvalStatus: 'approvalStatus 3',
          approverUserId: 3,
          id: 97,
        },
        {
          requestId: 4,
          employeeId: 4,
          typeOfLeave: 'typeOfLeave 4',
          startDate: '2024-02-03T12:44:25.762Z',
          endDate: '2024-09-25T07:25:24.355Z',
          reason: 'reason 4',
          approvalStatus: 'approvalStatus 4',
          approverUserId: 4,
          id: 82,
        },
        {
          requestId: 5,
          employeeId: 5,
          typeOfLeave: 'typeOfLeave 5',
          startDate: '2024-11-13T11:36:43.636Z',
          endDate: '2024-01-25T03:27:11.277Z',
          reason: 'reason 5',
          approvalStatus: 'approvalStatus 5',
          approverUserId: 5,
          id: 43,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('UsersEntity', data.Users);
      await this.SeedResource('EmployeesEntity', data.Employees);
      await this.SeedResource('EvaluationsEntity', data.Evaluations);
      await this.SeedResource('PayrollEntity', data.Payroll);
      await this.SeedResource('LeaveRequestsEntity', data.LeaveRequests);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
